{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6**","webpack:///webpack/bootstrap 804bfbe09dc8fab77365?4bdf**","webpack:///./src/ajaxBackend.js?bf2e"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;AAYA;AACO,KAAM,oCAAc,SAAd,WAAc,GAAM;AAChC;AACA,MAAI,oBAAJ;AAAA,MAAiB,aAAjB;AAAA,MAAuB,gBAAvB;AACA,WAAS,QAAT,OAA8D;AAAA,OAA9B,CAA8B,QAA3C,WAA2C;AAAA,OAArB,GAAqB,QAA3B,IAA2B;AAAA,OAAP,IAAO,QAAhB,OAAgB;;AAC7D,iBAAc,CAAd;AACA,UAAc;AAAA,WAAa,QAAQ,OAAR,CAAgB,+BAAhB,CAAb;AAAA,IAAd;AACA,aAAc,IAAd;AACA;;AAED;AACA,MAAM,UAAU;AACf,aADe,6BACM;AAAA,QAAT,MAAS,SAAT,MAAS;;AACpB,WAAO,KAAK;AACX,UAAW,OAAX,SAAsB,OAAO,KADlB;AAEX,aAAQ,MAFG;AAGX,WAAQ;AAHG,KAAL,CAAP;AAKA,IAPc;AAQf,cARe,8BAQkB;AAAA,QAApB,MAAoB,SAApB,MAAoB;AAAA,QAAZ,SAAY,SAAZ,SAAY;;AAChC,WAAO,KAAK;AACX,UAAQ,OAAO,IAAP,IAAkB,OAAlB,SAA6B,OAAO,WAAP,CAAmB,IAAhD,SAAwD,OAAO,EAD5D;AAEX,aAAQ,MAFG;AAGX,WAAQ;AAHG,KAAL,CAAP;AAKA,IAdc;AAef,gBAfe,gCAeS;AAAA,QAAT,MAAS,SAAT,MAAS;;AACvB,WAAO,KAAK;AACX,UAAQ,OAAO,IAAP,IAAkB,OAAlB,SAA6B,OAAO,WAAP,CAAmB,IAAhD,SAAwD,OAAO,EAD5D;AAEX,aAAQ;AAFG,KAAL,CAAP;AAIA,IApBc;AAqBf,OArBe,gBAqBV,SArBU,EAqBe;AAAA,QAAd,OAAc,yDAAJ,EAAI;AAC7B;AAEA,IAxBc;AAyBf,UAzBe,mBAyBP,GAzBO,EAyBY;AAAA,QAAd,OAAc,yDAAJ,EAAI;;AAC1B,WAAO,KAAK;AACX,UAAW,OAAX,UAAsB,IAAI,UAAJ,GAAiB,IAAI,MAArB,GAA8B,IAAI,IAAxD,CADW;AAEX,aAAQ;AAFG,KAAL,CAAP;AAIA;AA9Bc,GAAhB;;AAiCA,SAAO,EAAE,gBAAF,EAAW,kBAAX,EAAP;AACA,EA5CM;;AA8CP,oB","file":"ajaxBackend-minimal.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"OpenPhysiologyModel\"] = factory();\n\telse\n\t\troot[\"OpenPhysiologyModel\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 804bfbe09dc8fab77365\n **/","/**\n\timport ajaxBackend from './node_modules/open-physiology-model/src/ajaxBackend.js';\n\tlet environment = moduleFactory(frontend);\n\tlet {backend, register} = ajaxBackend();\n\tregister({\n\t\tenvironment: environment,\n\t\tbaseURL:     'http://localhost:8888',\n\t\tajax:        $.ajax\n\t});\n\t// use backend\n*/\n\n/* super-simple storage implementation */\nexport const ajaxBackend = () => {\n\t/* a way for test suites to register the environment to these mock-handlers */\n\tlet environment, ajax, baseURL;\n\tfunction register({environment: e, ajax: ajx, baseURL: burl}) {\n\t\tenvironment = e;\n\t\tajax        = (...args) => Promise.resolve(ajx(...args));\n\t\tbaseURL     = burl;\n\t}\n\t\n\t/* the interface to hand to the library when instantiating a module */\n\tconst backend = {\n\t\tcommit_new({values}) {\n\t\t\treturn ajax({\n\t\t\t\turl:    `${baseURL}/${values.class}`,\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdata:   values\n\t\t\t});\n\t\t},\n\t\tcommit_edit({entity, newValues}) {\n\t\t\treturn ajax({\n\t\t\t\turl:    entity.href || `${baseURL}/${entity.constructor.name}/${entity.id}`,\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdata:   newValues\n\t\t\t});\n\t\t},\n\t\tcommit_delete({entity}) {\n\t\t\treturn ajax({\n\t\t\t\turl:    entity.href || `${baseURL}/${entity.constructor.name}/${entity.id}`,\n\t\t\t\tmethod: 'DELETE'\n\t\t\t});\n\t\t},\n\t\tload(addresses, options = {}) {\n\t\t\t// TODO\n\t\t\tassert(false, `Sorry, the load method is not yet implemented. Please use loadAll for now.`);\n\t\t},\n\t\tloadAll(cls, options = {}) {\n\t\t\treturn ajax({\n\t\t\t\turl:    `${baseURL}/${cls.isResource ? cls.plural : cls.name}`,\n\t\t\t\tmethod: 'GET'\n\t\t\t});\n\t\t}\n\t};\n\t\n\treturn { backend, register };\n};\n\n// TODO: unit tests\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ajaxBackend.js\n **/"],"sourceRoot":""}